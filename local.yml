version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
      args:
        SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
    image: ld_platform_local_django
    container_name: django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ld_platform_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"

  docs:
    image: ld_platform_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./ld_platform:/app/ld_platform:z
    ports:
      - "7000:7000"
    command: /start-docs

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: ld_platform_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: ld_platform_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: ld_platform_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

  collector-rmqserver:
    image: rabbitmq:3.9-management
    container_name: 'collector-rmqserver'
    networks:
      - collector-network

  collector-producer:
    build:
      context: .
      dockerfile: ./compose/local/collector/Dockerfile
      args:
        SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
    image: ld_platform_local_collector
    container_name: collector-producer
    depends_on:
      - collector-rmqserver
    networks:
      - collector-network
    restart: always
    command: /start-producer

  collector-consumer:
    image: ld_platform_local_collector
    container_name: collector-consumer
    depends_on:
      - collector-rmqserver
    networks:
      - collector-network
    restart: always
    command: /start-consumer

networks:
  collector-network:
    driver: bridge
